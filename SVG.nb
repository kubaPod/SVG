(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     13548,        385]
NotebookOptionsPosition[     12739,        358]
NotebookOutlinePosition[     13089,        373]
CellTagsIndexPosition[     13046,        370]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"$Path", "=", 
   RowBox[{"Union", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "$Path"}], "}"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "@", "\"\<SVG`\>\""}]}], "Input",
 CellChangeTimes->{{3.6617705127686825`*^9, 3.6617705173689795`*^9}, {
  3.661792103250047*^9, 3.6617921340920963`*^9}}],

Cell[BoxData[
 RowBox[{"?", "SVG`*"}]], "Input",
 CellChangeTimes->{{3.6617705226214304`*^9, 3.661770529094751*^9}}],

Cell[BoxData[
 RowBox[{"gr", "=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EdgeForm", "[", 
        RowBox[{"Directive", "[", 
         RowBox[{"Dashed", ",", "Blue", ",", "Thick"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Disk", "[", "#", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Yellow", ",", 
           RowBox[{"Disk", "[", 
            RowBox[{"#", "+", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"Disk", "[", "#2", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"EdgeForm", "@", "Orange"}], ",", 
         RowBox[{"FaceForm", "@", 
          RowBox[{"Opacity", "@", ".5"}]}], ",", 
         RowBox[{"Disk", "[", "#3", "]"}]}], "}"}]}], "}"}], "&"}], "@@", 
    RowBox[{"CirclePoints", "[", "3", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6617705619057083`*^9, 3.6617705619057083`*^9}}],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ExportString", "[", 
      RowBox[{"#", ",", "\"\<HTMLFragment\>\""}], "]"}], "&"}], "/@", 
    RowBox[{"ExportSVG", "@", "gr"}]}], "//", "Column"}]}]], "Input",
 CellChangeTimes->{{3.661770565270561*^9, 3.6617705703257523`*^9}, {
   3.661792538272331*^9, 3.661792545563698*^9}, 3.66179325013931*^9, {
   3.6617978458895063`*^9, 3.661797881592348*^9}}],

Cell[BoxData[
 RowBox[{"Last", "@", 
  RowBox[{"Reap", "@", 
   RowBox[{"Scan", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sow", "[", 
       RowBox[{"#", ",", 
        RowBox[{"directiveType", "@", "#"}]}], "]"}], "&"}], ",", 
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6617926181224003`*^9, 3.6617926718791113`*^9}}],

Cell[BoxData[
 RowBox[{"directiveType", "[", "c_"}]], "Input",
 CellChangeTimes->{{3.661792684854863*^9, 3.66179268594865*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SVG`Private`mergeDirectives", "[", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->GrayLevel[0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "GrayLevel[0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0],
      Editable->False,
      Selectable->False], ",", 
     RowBox[{"EdgeForm", "[", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            FrameStyle->RGBColor[0., 0., 0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           "RGBColor[0, 0, 1]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[0, 0, 1],
         Editable->False,
         Selectable->False], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "]"}], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1, 0],
      Editable->False,
      Selectable->False]}], "}"}], "]"}], ",", 
  RowBox[{"Disk", "[", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SqrtBox["3"], "2"], ",", 
     FractionBox["1", "2"]}], "}"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{"Red", ",", 
    RowBox[{"EdgeForm", "[", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Thickness", "@", "1"}]}], "}"}], "]"}], ",", 
    RowBox[{"Disk", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6617948626987543`*^9, 3.6617949103353524`*^9}}],

Cell[BoxData[
 RowBox[{"ExportString", "[", 
  RowBox[{
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<tag\>\"", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "]"}], ",", "\"\<HTMLFragment\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6617979084628673`*^9, 3.661797915253375*^9}}],

Cell[BoxData[{
 RowBox[{"ExportString", "[", 
  RowBox[{
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<input\>\"", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "]"}], ",", "\"\<HTMLFragment\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"StringReplace", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ExportString", "[", 
    RowBox[{
     RowBox[{"XMLElement", "[", 
      RowBox[{"\"\<test\>\"", ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "]"}], ",", "\"\<HTMLFragment\>\""}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<></\>\"", "~~", 
     RowBox[{"LetterCharacter", ".."}], "~~", "\"\<>\>\"", "~~", 
     "EndOfString"}], "->", "\"\</>\>\""}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6618375844370313`*^9, 3.661837631626546*^9}, {
  3.6618376957519784`*^9, 3.661837778382335*^9}}],

Cell[BoxData[
 RowBox[{"\"\<<input class=\\\"form-control\\\"/>\>\"", " "}]], "Input",
 CellChangeTimes->{{3.661838541176169*^9, 3.661838541176169*^9}}],

Cell[BoxData[
 RowBox[{"ExportString", "[", 
  RowBox[{
   RowBox[{"XMLElement", "[", 
    RowBox[{"\"\<test\>\"", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "]"}], ",", "\"\<XHTML\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6618387734840307`*^9, 3.661838777805013*^9}}],

Cell[BoxData[
 RowBox[{"\"\<<test></test>\>\"", " "}]], "Input",
 CellChangeTimes->{{3.6618385734808702`*^9, 3.6618385734808702`*^9}}],

Cell[BoxData["StringDelete"], "Input",
 CellChangeTimes->{{3.6618376390353613`*^9, 3.661837641120858*^9}}],

Cell[BoxData[
 RowBox[{"StringReplace", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ExportString", "[", 
    RowBox[{
     RowBox[{"XMLElement", "[", 
      RowBox[{"\"\<test\>\"", ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "]"}], ",", "\"\<HTMLFragment\>\""}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<></\>\"", "~~", 
     RowBox[{"LetterCharacter", ".."}], "~~", "\"\<>\>\"", "~~", 
     "EndOfString"}], "->", "\"\<>\>\""}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{3.6618386880999746`*^9}]
},
WindowSize->{1100, 642},
WindowMargins->{{Automatic, -1323}, {Automatic, -331}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 391, 10, 52, "Input"],
Cell[952, 32, 116, 2, 31, "Input"],
Cell[1071, 36, 1036, 27, 92, "Input"],
Cell[2110, 65, 439, 10, 31, "Input"],
Cell[2552, 77, 390, 11, 31, "Input"],
Cell[2945, 90, 127, 2, 31, "Input"],
Cell[3075, 94, 6779, 178, 73, "Input"],
Cell[9857, 274, 396, 10, 72, "Input"],
Cell[10256, 286, 303, 8, 31, "Input"],
Cell[10562, 296, 894, 23, 112, "Input"],
Cell[11459, 321, 152, 2, 31, InheritFromParent],
Cell[11614, 325, 294, 7, 31, "Input"],
Cell[11911, 334, 134, 2, 31, InheritFromParent],
Cell[12048, 338, 106, 1, 31, "Input"],
Cell[12157, 341, 578, 15, 92, "Input"]
}
]
*)

(* End of internal cache information *)
