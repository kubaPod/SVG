(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     44650,       1152]
NotebookOptionsPosition[     42027,       1058]
NotebookOutlinePosition[     42372,       1073]
CellTagsIndexPosition[     42329,       1070]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Graphics[...] to SVG converter", "Title",
 CellChangeTimes->{{3.661334688639401*^9, 3.6613346959629707`*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Section",
 CellChangeTimes->{{3.661334700443447*^9, 3.661334712365075*^9}}],

Cell[TextData[{
 "This document collects various functions that I have developed to convert a \
general ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Graphics object into SVG. It is very much a work in progress, but it shows \
the approach that I took. The general flow in this converter is that the user \
provides a Graphics[data] object, and an association with key-value pairs \
corresponding to SVG attributes is built up. Finally there is a function that \
takes such an association and generates an SVG string from it."
}], "Text",
 CellChangeTimes->{{3.6613347200823727`*^9, 3.661334850534383*^9}, {
  3.661335179161744*^9, 3.661335283255487*^9}, {3.661335552124152*^9, 
  3.6613355661526747`*^9}}],

Cell[CellGroupData[{

Cell["Defaults", "Subsubsection",
 CellChangeTimes->{{3.661334853144278*^9, 3.661334853988155*^9}}],

Cell[TextData[{
 "When Graphics is used without options, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses a set of standard settings for colors, font, opacity etc. These are \
stored in a global variable defined in the \[OpenCurlyDoubleQuote]Defaults\
\[CloseCurlyDoubleQuote] section."
}], "Text",
 CellChangeTimes->{{3.6613348564291277`*^9, 3.661334951286912*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["convertProperty", "Subsubsection",
 CellChangeTimes->{{3.661334955336878*^9, 3.66133497171651*^9}}],

Cell[TextData[{
 "Primitives can be styled in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " with properties like EdgeColor, FaceColor and so on. In SVG primitives are \
also styled with such properties, known in SVG as \
\[OpenCurlyDoubleQuote]attributes\[CloseCurlyDoubleQuote]. The function \
convertProperty generates key-value pairs for attributes from ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " properties. All the definitions for convertProperty are gathered in the \
convertProperty section."
}], "Text",
 CellChangeTimes->{{3.66133499646589*^9, 3.661335171343099*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["convertPrimitive", "Subsubsection",
 CellChangeTimes->{{3.661335303842358*^9, 3.661335305934684*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " supports various primitives like Rectangle, Circle and so on. Some of \
these primitives have direct equivalents in SVG, others not. The job of the \
function convertPrimitive is to take a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " primitive and generate the information necessary to create an equivalent \
graphics object in SVG. It does not create the actual SVG string, but gathers \
the information in an Association from which an SVG string can be generated \
later."
}], "Text",
 CellChangeTimes->{{3.6613353556674223`*^9, 3.661335500229045*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utility functions", "Subsubsection",
 CellChangeTimes->{{3.661335596616701*^9, 3.661335598540506*^9}}],

Cell["\<\
The previous sections described convertProperty and convertPrimitive which is \
where the majority of effort in developing the converter will have to be \
spent. This is where all the definitions for all the primitives and \
properties will have to be added. However, there also needs to be functions \
that can walk through graphics directives and utilize convertProperty and \
convertPrimitive into SVG strings. These functions are gathered in the \
section \[OpenCurlyDoubleQuote]Utility functions\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.661335599281453*^9, 3.6613357039730673`*^9}, {
  3.661335747972378*^9, 3.661335756115691*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.661335769615131*^9, 3.66133577256245*^9}}],

Cell["\<\
This is an example of how far I have come. Note that I still appear to have \
(I say \[OpenCurlyDoubleQuote]appear\[CloseCurlyDoubleQuote] because I haven\
\[CloseCurlyQuote]t worked on it for months, and do not remember exactly all \
the problems that I still have) probems with the border of the objects in the \
generated SVG.\
\>", "Text",
 CellChangeTimes->{{3.661335773843088*^9, 3.661335836809772*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gr", "=", 
  RowBox[{"Graphics", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EdgeForm", "[", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", "Red", ",", 
     RowBox[{"Rectangle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"30", ",", "30"}], "}"}], ",", 
       RowBox[{"RoundingRadius", "\[Rule]", "0.5"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "Blue", ",", 
     RowBox[{"Rectangle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"20", ",", "20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"40", ",", "40"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6613344894975557`*^9, 3.661334506708974*^9}, 
   3.661335716597332*^9}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], AbsoluteThickness[10]}], 
   RectangleBox[{0, 0}, {30, 30},
    RoundingRadius->0.5], 
   {RGBColor[0, 0, 1], RectangleBox[{20, 20}, {40, 40}]}}]], "Output",
 CellChangeTimes->{{3.661334490250247*^9, 3.661334506993889*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"str", "=", 
  RowBox[{"SVG", "[", "gr", "]"}]}]], "Input",
 CellChangeTimes->{{3.66133451266044*^9, 3.661334532864415*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"rect\"\>"}], ",", 
     RowBox[{"\<\"xmax\"\>", "\[Rule]", "30"}], ",", 
     RowBox[{"\<\"ymax\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"xmin\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"ymin\"\>", "\[Rule]", 
      RowBox[{"-", "60"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"rect\"\>"}], ",", 
     RowBox[{"\<\"xmax\"\>", "\[Rule]", "40"}], ",", 
     RowBox[{"\<\"ymax\"\>", "\[Rule]", 
      RowBox[{"-", "20"}]}], ",", 
     RowBox[{"\<\"xmin\"\>", "\[Rule]", "20"}], ",", 
     RowBox[{"\<\"ymin\"\>", "\[Rule]", 
      RowBox[{"-", "60"}]}]}], "\[RightAssociation]"}]}], "}"}]], "Print",
 CellChangeTimes->{3.66133453352988*^9}],

Cell[BoxData["\<\"<svg viewBox=\\\"0.0 -48.0 32.0 48.0\\\" \
preserveAspectRatio=\\\"xMinYMin meet\\\" width=\\\"348px\\\" \
height=\\\"348px\\\">\\n\\t<rect EdgeColor=\\\"GrayLevel[0]\\\" \
FaceColor=\\\"GrayLevel[0]\\\" Arrowheads=\\\"0.04\\\" EdgeDashing=\\\"None\\\
\" Thickness=\\\"Medium\\\" Opacity=\\\"1\\\" FontColor=\\\"Black\\\" \
FontFamily=\\\"Arial\\\" transform=\\\"{}\\\" stroke=\\\"rgb(0%,0%,0%)\\\" \
stroke-width=\\\"10pt\\\" fill=\\\"rgb(100%,0%,0%)\\\" x=\\\"0pt\\\" \
y=\\\"-30pt\\\" width=\\\"30pt\\\" height=\\\"30pt\\\" rx=\\\"0.5pt\\\" ry=\\\
\"0.5pt\\\" />\\n\\t<rect EdgeColor=\\\"GrayLevel[0]\\\" \
FaceColor=\\\"GrayLevel[0]\\\" Arrowheads=\\\"0.04\\\" EdgeDashing=\\\"None\\\
\" Thickness=\\\"Medium\\\" Opacity=\\\"1\\\" FontColor=\\\"Black\\\" \
FontFamily=\\\"Arial\\\" transform=\\\"{}\\\" stroke=\\\"rgb(0%,0%,0%)\\\" \
stroke-width=\\\"10pt\\\" fill=\\\"rgb(0%,0%,100%)\\\" x=\\\"20pt\\\" \
y=\\\"-40pt\\\" width=\\\"20pt\\\" height=\\\"20pt\\\" rx=\\\"0pt\\\" \
ry=\\\"0pt\\\" />\\n</svg>\"\>"], "Output",
 CellChangeTimes->{3.661334533554554*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SystemOpen", "@", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<test.svg\>\"", ",", 
     RowBox[{"SVG", "[", "gr", "]"}], ",", "\"\<Text\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.661334537703198*^9, 3.661334573607086*^9}, {
  3.661334609554709*^9, 3.6613346394349127`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defaults", "Section",
 CellChangeTimes->{{3.642820886121949*^9, 3.642820887121105*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"defaults", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<EdgeColor\>\"", "\[Rule]", "Black"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<FaceColor\>\"", "\[Rule]", "Black"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Arrowheads\>\"", "\[Rule]", "0.04"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<EdgeDashing\>\"", "\[Rule]", "None"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Thickness\>\"", "\[Rule]", "Medium"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Opacity\>\"", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"\"\<FontColor\>\"", "\[Rule]", "\"\<Black\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<FontFamily\>\"", "\[Rule]", "\"\<Arial\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<transform\>\"", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "|>"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.642853677088051*^9, 3.642853677208253*^9}, {
  3.6428537838664827`*^9, 3.642853809488307*^9}, {3.642854433483376*^9, 
  3.6428544369552517`*^9}, {3.6428545015269136`*^9, 3.642854535053137*^9}, {
  3.64285457416571*^9, 3.642854574784502*^9}, {3.6613331830748453`*^9, 
  3.6613331852146587`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorQ", "@", 
  RowBox[{"GrayLevel", "@", "1"}]}]], "Input",
 CellChangeTimes->{{3.661792298191126*^9, 3.66179232370795*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6617923092623615`*^9, 3.6617923239110823`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["convertProperty", "Section",
 CellChangeTimes->{{3.6428208955783577`*^9, 3.6428208982232533`*^9}, {
  3.6613349737639713`*^9, 3.661334976171348*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"convertProperty", "[", 
   RowBox[{"c", ":", 
    RowBox[{"(", 
     RowBox[{"_RGBColor", "|", "_GrayLevel"}], ")"}]}], "]"}], ":=", 
  RowBox[{"<|", 
   RowBox[{"\"\<fill\>\"", "\[Rule]", 
    RowBox[{"convertColor", "[", "c", "]"}]}], 
   "|>"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"convertProperty", "[", 
   RowBox[{
    RowBox[{"c", ":", 
     RowBox[{"(", 
      RowBox[{"_RGBColor", "|", "_GrayLevel"}], ")"}]}], ",", 
    "\"\<face\>\""}], "]"}], ":=", 
  RowBox[{"<|", 
   RowBox[{"\"\<fill\>\"", "\[Rule]", 
    RowBox[{"convertColor", "[", "c", "]"}]}], 
   "|>"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"convertProperty", "[", 
    RowBox[{
     RowBox[{"c", ":", 
      RowBox[{"(", 
       RowBox[{"_RGBColor", "|", "_GrayLevel"}], ")"}]}], ",", 
     "\"\<edge\>\""}], "]"}], ":=", 
   RowBox[{"<|", 
    RowBox[{"\"\<stroke\>\"", "\[Rule]", 
     RowBox[{"convertColor", "[", "c", "]"}]}], "|>"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"convertProperty", "[", 
   RowBox[{"d", ":", 
    RowBox[{"AbsoluteDashing", "[", "_", "]"}]}], "]"}], ":=", 
  RowBox[{"convertPrimitive", "[", 
   RowBox[{"AbsoluteDashing", "[", 
    RowBox[{"{", 
     RowBox[{"d", ",", "d"}], "}"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"convertProperty", "[", 
    RowBox[{"AbsoluteDashing", "[", "d_List", "]"}], "]"}], ":=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{"\"\<stroke-dasharray\>\"", "\[Rule]", 
     RowBox[{"StringJoin", "@@", 
      RowBox[{"Riffle", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<pt\>\""}], "&"}], "/@",
          "d"}], ",", "\"\<,\>\""}], "]"}]}]}], "\[IndentingNewLine]", 
    "|>"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"convertProperty", "[", 
    RowBox[{
     RowBox[{"AbsoluteThickness", "[", "d_", "]"}], ",", "_"}], "]"}], ":=", 
   RowBox[{"<|", 
    RowBox[{"\"\<stroke-width\>\"", "\[Rule]", 
     RowBox[{
      RowBox[{"ToString", "[", "d", "]"}], "<>", "\"\<pt\>\""}]}], "|>"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"convertProperty", "[", 
   RowBox[{"FaceForm", "[", "dir_", "]"}], "]"}], ":=", 
  RowBox[{"Association", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"convertProperty", "[", 
       RowBox[{"#", ",", "\"\<face\>\""}], "]"}], "&"}], "/@", "dir"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"convertProperty", "[", 
   RowBox[{"EdgeForm", "[", "dir_", "]"}], "]"}], ":=", 
  RowBox[{"Association", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"convertProperty", "[", 
       RowBox[{"#", ",", "\"\<edge\>\""}], "]"}], "&"}], "/@", "dir"}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.642820918370781*^9, 3.642820918790601*^9}, {
  3.642854667097014*^9, 3.6428546690523033`*^9}, {3.6428553518493347`*^9, 
  3.642855397538097*^9}, {3.6428570701616793`*^9, 3.642857071116811*^9}, {
  3.642857176436543*^9, 3.642857180305122*^9}, {3.642857221603569*^9, 
  3.642857268053664*^9}, {3.6428573112237787`*^9, 3.6428573128230658`*^9}, {
  3.6428573447278833`*^9, 3.642857361423234*^9}, {3.642857481133239*^9, 
  3.642857503744569*^9}, {3.642857571297969*^9, 3.642857591559843*^9}, {
  3.6428576970563793`*^9, 3.642857739092678*^9}, {3.642858944706355*^9, 
  3.6428589547660503`*^9}, {3.64286477399568*^9, 3.642864774392507*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["convertPrimitive", "Section",
 CellChangeTimes->{{3.642820935008309*^9, 3.642820937796899*^9}, {
  3.6613352968001823`*^9, 3.661335298273652*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"convertPrimitive", "[", 
   RowBox[{
    RowBox[{"Rectangle", "[", 
     RowBox[{
      RowBox[{"pt", ":", "_"}], ",", 
      RowBox[{"patt", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ",", "assoc_"}], 
   "]"}], ":=", 
  RowBox[{"convertPrimitive", "[", 
   RowBox[{
    RowBox[{"Rectangle", "[", 
     RowBox[{"pt", ",", 
      RowBox[{"pt", "+", "1"}], ",", "patt"}], "]"}], ",", "assoc"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"convertPrimitive", "[", 
   RowBox[{
    RowBox[{"r", ":", 
     RowBox[{"Rectangle", "[", 
      RowBox[{"_", ",", "_", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ",", "assoc_"}], 
   "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "Rectangle", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xmin_", ",", "ymin_"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"xmax_", ",", "ymax_"}], "}"}], ",", 
        RowBox[{"OptionsPattern", "[", 
         RowBox[{"{", 
          RowBox[{"RoundingRadius", "\[Rule]", "0"}], "}"}], "]"}]}], "]"}], ":=", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<meta\>\"", "\[Rule]", 
         RowBox[{"<|", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<type\>\"", "\[Rule]", "\"\<rect\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<xmax\>\"", "\[Rule]", "xmax"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<ymax\>\"", "\[Rule]", 
            RowBox[{"-", "ymin"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<xmin\>\"", "\[Rule]", "xmin"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<ymin\>\"", "\[Rule]", 
            RowBox[{
             RowBox[{"-", "ymax"}], "-", 
             RowBox[{"(", 
              RowBox[{"ymax", "-", "ymin"}], ")"}]}]}]}], 
          "\[IndentingNewLine]", "|>"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<x\>\"", "\[Rule]", 
         RowBox[{"toPt", "@", "xmin"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<y\>\"", "\[Rule]", 
         RowBox[{"toPt", "[", 
          RowBox[{"-", "ymax"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<width\>\"", "\[Rule]", 
         RowBox[{"toPt", "[", 
          RowBox[{"xmax", "-", "xmin"}], "]"}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"\"\<height\>\"", "\[Rule]", 
         RowBox[{"toPt", "[", 
          RowBox[{"ymax", "-", "ymin"}], "]"}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"\"\<rx\>\"", "\[Rule]", 
         RowBox[{"toPt", "@", 
          RowBox[{"OptionValue", "[", "RoundingRadius", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ry\>\"", "\[Rule]", 
         RowBox[{"toPt", "@", 
          RowBox[{"OptionValue", "[", "RoundingRadius", "]"}]}]}]}], 
       "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", "r"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.642854934616991*^9, 3.642854943806739*^9}, {
  3.642854979748625*^9, 3.642854987876145*^9}, {3.642864562899434*^9, 
  3.6428645992407017`*^9}, {3.642865926467415*^9, 3.6428659321559362`*^9}, {
  3.6428659623524303`*^9, 3.642865997911252*^9}, {3.642866083598591*^9, 
  3.642866084385358*^9}, {3.642881318265082*^9, 3.642881353252285*^9}, {
  3.642881664659543*^9, 3.642881720867166*^9}, {3.642881768748155*^9, 
  3.642881775675551*^9}, {3.6428880547561626`*^9, 3.642888056729797*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Utility functions", "Section",
 CellChangeTimes->{{3.642820950477107*^9, 3.642820956387663*^9}}],

Cell[CellGroupData[{

Cell["Walk Graphics[...]", "Subsection",
 CellChangeTimes->{{3.642857968637827*^9, 3.64285801309223*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPrimitives", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", "data_", "]"}], ",", "defaults_"}], "]"}], ":=", 
  
  RowBox[{"First", "@", 
   RowBox[{"Last", "@", 
    RowBox[{"Reap", "@", 
     RowBox[{"Fold", "[", 
      RowBox[{"cumulativeProperties", ",", "defaults", ",", "data"}], 
      "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.642786415727716*^9, 3.642786424112191*^9}, {
   3.642786457829488*^9, 3.64278646265456*^9}, 3.642786524340693*^9, {
   3.642786567745326*^9, 3.642786568696063*^9}, {3.642786796086914*^9, 
   3.642786848132621*^9}, {3.64278916176962*^9, 3.642789187780308*^9}, {
   3.642789418406066*^9, 3.642789432845558*^9}, {3.642789513366105*^9, 
   3.642789546266445*^9}, {3.642821249105345*^9, 3.642821252259452*^9}, {
   3.642821450142077*^9, 3.642821463042758*^9}, {3.642881905686706*^9, 
   3.64288191464291*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cumulativeProperties", "[", 
   RowBox[{"assoc_", ",", "el_"}], "]"}], ":=", 
  RowBox[{"Which", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"isPrimitive", "[", "el", "]"}], ",", 
    RowBox[{
     RowBox[{"Sow", "@", 
      RowBox[{"<|", 
       RowBox[{"assoc", ",", 
        RowBox[{"convertPrimitive", "[", 
         RowBox[{"el", ",", "assoc"}], "]"}]}], "|>"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{"assoc", ",", 
       RowBox[{"<|", 
        RowBox[{"\"\<transform\>\"", "\[Rule]", 
         RowBox[{"{", "}"}]}], "|>"}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"isTransform", "[", "el", "]"}], ",", 
    RowBox[{"cumulativeProperties", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{"assoc", ",", 
        RowBox[{"<|", 
         RowBox[{"\"\<transform\>\"", "\[Rule]", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"assoc", "[", "\"\<transform\>\"", "]"}], ",", 
            RowBox[{"Rest", "@", "el"}]}], "]"}]}], "|>"}]}], "|>"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"First", "@", "el"}]}], "\[IndentingNewLine]", "]"}], ",", 
    "\[IndentingNewLine]", "True", ",", 
    RowBox[{"<|", 
     RowBox[{"assoc", ",", 
      RowBox[{"convertProperty", "@", "el"}]}], "|>"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.642788947197363*^9, 3.642789129635874*^9}, {
  3.642819861091312*^9, 3.6428198942507343`*^9}, {3.642819934348054*^9, 
  3.6428199544972878`*^9}, {3.642820000287538*^9, 3.642820002865361*^9}, {
  3.6428204253296223`*^9, 3.6428204910864487`*^9}, {3.642820548772505*^9, 
  3.642820577501793*^9}, {3.642820626489596*^9, 3.6428206337501783`*^9}, {
  3.6428217462573566`*^9, 3.6428217679016113`*^9}, {3.6428221658918324`*^9, 
  3.6428221681230927`*^9}, {3.642822380505392*^9, 3.642822382526362*^9}, {
  3.642853764701371*^9, 3.642853773859276*^9}, {3.642854998685505*^9, 
  3.642855046603558*^9}}],

Cell[TextData[{
 "cumulativeProperties should be called recursively on an Graphics object. \
Each time it is called it will handle one element of list in \
Graphics[{list}]. If it encounters a property it will add it to the property \
list. If it finds a primitive it will use the list of properties it has \
gathered thus far to sow an SVG string corresponding to that primitive. If \
the primitive is wrapped in a transform it will also handle that. It is \
called \[OpenCurlyDoubleQuote]cumulativeProperties\[CloseCurlyDoubleQuote] \
because it parses properties just like ",
 StyleBox["Mathematica: all properties affect all primitives that come \
afterwards, new properties overwrite older properties. Example:",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.661333605650632*^9, 3.661333613031304*^9}, {
  3.661333651470234*^9, 3.661333684836817*^9}, {3.661333784691696*^9, 
  3.6613337978742*^9}, {3.661333872414947*^9, 3.661333958711585*^9}, {
  3.661334069026639*^9, 3.6613342294814663`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"getPrimitives", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"Red", ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"RoundingRadius", "\[Rule]", "0.1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"EdgeForm", "[", 
        RowBox[{"Directive", "[", "White", "]"}], "]"}], ",", "Blue", ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.5"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], "]"}], ",", "defaults"}], "]"}], "//", "Column"}]], "Input",
 CellChangeTimes->{{3.661333467031787*^9, 3.661333519094789*^9}, {
  3.6613335502015333`*^9, 3.661333552697805*^9}, {3.661334242397553*^9, 
  3.661334247346355*^9}, {3.661334449055334*^9, 3.661334451427847*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"EdgeColor\"\>", "\[Rule]", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            FrameStyle->GrayLevel[0.],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           "GrayLevel[0]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[0],
         Editable->False,
         Selectable->False]}], ",", 
       RowBox[{"\<\"FaceColor\"\>", "\[Rule]", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            FrameStyle->GrayLevel[0.],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           "GrayLevel[0]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[0],
         Editable->False,
         Selectable->False]}], ",", 
       RowBox[{"\<\"Arrowheads\"\>", "\[Rule]", "0.04`"}], ",", 
       RowBox[{"\<\"EdgeDashing\"\>", "\[Rule]", "None"}], ",", 
       RowBox[{"\<\"Thickness\"\>", "\[Rule]", "Medium"}], ",", 
       RowBox[{"\<\"Opacity\"\>", "\[Rule]", "1"}], ",", 
       RowBox[{"\<\"FontColor\"\>", "\[Rule]", "\<\"Black\"\>"}], ",", 
       RowBox[{"\<\"FontFamily\"\>", "\[Rule]", "\<\"Arial\"\>"}], ",", 
       RowBox[{"\<\"transform\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"fill\"\>", "\[Rule]", "\<\"rgb(100%,0%,0%)\"\>"}], ",", 
       RowBox[{"\<\"meta\"\>", "\[Rule]", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"rect\"\>"}], ",", 
          RowBox[{"\<\"xmax\"\>", "\[Rule]", "1"}], ",", 
          RowBox[{"\<\"ymax\"\>", "\[Rule]", "0"}], ",", 
          RowBox[{"\<\"xmin\"\>", "\[Rule]", "0"}], ",", 
          RowBox[{"\<\"ymin\"\>", "\[Rule]", 
           RowBox[{"-", "2"}]}]}], "\[RightAssociation]"}]}], ",", 
       RowBox[{"\<\"x\"\>", "\[Rule]", "\<\"0pt\"\>"}], ",", 
       RowBox[{"\<\"y\"\>", "\[Rule]", "\<\"-1pt\"\>"}], ",", 
       RowBox[{"\<\"width\"\>", "\[Rule]", "\<\"1pt\"\>"}], ",", 
       RowBox[{"\<\"height\"\>", "\[Rule]", "\<\"1pt\"\>"}], ",", 
       RowBox[{"\<\"rx\"\>", "\[Rule]", "\<\"0.1pt\"\>"}], ",", 
       RowBox[{"\<\"ry\"\>", "\[Rule]", "\<\"0.1pt\"\>"}]}], 
      "\[RightAssociation]"}]},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"EdgeColor\"\>", "\[Rule]", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            FrameStyle->GrayLevel[0.],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           "GrayLevel[0]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[0],
         Editable->False,
         Selectable->False]}], ",", 
       RowBox[{"\<\"FaceColor\"\>", "\[Rule]", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            FrameStyle->GrayLevel[0.],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           "GrayLevel[0]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["GrayLevelColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         GrayLevel[0],
         Editable->False,
         Selectable->False]}], ",", 
       RowBox[{"\<\"Arrowheads\"\>", "\[Rule]", "0.04`"}], ",", 
       RowBox[{"\<\"EdgeDashing\"\>", "\[Rule]", "None"}], ",", 
       RowBox[{"\<\"Thickness\"\>", "\[Rule]", "Medium"}], ",", 
       RowBox[{"\<\"Opacity\"\>", "\[Rule]", "1"}], ",", 
       RowBox[{"\<\"FontColor\"\>", "\[Rule]", "\<\"Black\"\>"}], ",", 
       RowBox[{"\<\"FontFamily\"\>", "\[Rule]", "\<\"Arial\"\>"}], ",", 
       RowBox[{"\<\"transform\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"fill\"\>", "\[Rule]", "\<\"rgb(0%,0%,100%)\"\>"}], ",", 
       RowBox[{"\<\"stroke\"\>", "\[Rule]", "\<\"rgb(100%,100%,100%)\"\>"}], 
       ",", 
       RowBox[{"\<\"meta\"\>", "\[Rule]", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"rect\"\>"}], ",", 
          RowBox[{"\<\"xmax\"\>", "\[Rule]", "1.5`"}], ",", 
          RowBox[{"\<\"ymax\"\>", "\[Rule]", 
           RowBox[{"-", "0.5`"}]}], ",", 
          RowBox[{"\<\"xmin\"\>", "\[Rule]", "0.5`"}], ",", 
          RowBox[{"\<\"ymin\"\>", "\[Rule]", 
           RowBox[{"-", "2.5`"}]}]}], "\[RightAssociation]"}]}], ",", 
       RowBox[{"\<\"x\"\>", "\[Rule]", "\<\"0.5pt\"\>"}], ",", 
       RowBox[{"\<\"y\"\>", "\[Rule]", "\<\"-1.5pt\"\>"}], ",", 
       RowBox[{"\<\"width\"\>", "\[Rule]", "\<\"1.0pt\"\>"}], ",", 
       RowBox[{"\<\"height\"\>", "\[Rule]", "\<\"1.0pt\"\>"}], ",", 
       RowBox[{"\<\"rx\"\>", "\[Rule]", "\<\"0pt\"\>"}], ",", 
       RowBox[{"\<\"ry\"\>", "\[Rule]", "\<\"0pt\"\>"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.6613334688375883`*^9, 3.661333478684791*^9}, 
   3.661333519676162*^9, 3.661333553081555*^9, 3.66133424828447*^9, 
   3.661334451903763*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate SVG", "Subsection",
 CellChangeTimes->{{3.642860302247613*^9, 3.642860306915269*^9}, {
  3.642882768016824*^9, 3.642882769401844*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getViewBox", "[", "primitives_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"meta", ",", "minmax"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"meta", "=", 
      RowBox[{"Through", "[", 
       RowBox[{"primitives", "[", "\"\<meta\>\"", "]"}], "]"}]}], ";", 
     RowBox[{"Print", "[", "meta", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"minmax", "=", 
      RowBox[{
       RowBox[{"MinMax", "@*", "Flatten"}], "/@", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#xmax", ",", "#xmin"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"#ymax", ",", "#ymin"}], "}"}]}], "}"}], "&"}], "/@", 
         "meta"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "StringTemplate", "[", "\"\<viewBox=\\\"`1` `2` `3` `4`\\\"\>\"", "]"}],
       "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nPtToPx", "@", 
        RowBox[{"minmax", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], 
       RowBox[{"(*", " ", 
        RowBox[{"originx", ":", " ", 
         RowBox[{"min", " ", "x"}]}], "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"nPtToPx", "@", " ", 
        RowBox[{"minmax", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], 
       RowBox[{"(*", " ", 
        RowBox[{"originy", ":", " ", 
         RowBox[{"min", " ", "y"}]}], " ", "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"nPtToPx", "[", 
        RowBox[{
         RowBox[{"minmax", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "-", 
         RowBox[{"minmax", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], 
       RowBox[{"(*", " ", 
        RowBox[{"width", ":", " ", 
         RowBox[{
          RowBox[{"max", " ", "x"}], " ", "-", " ", 
          RowBox[{"min", " ", "x"}]}]}], "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"nPtToPx", "[", 
        RowBox[{
         RowBox[{"minmax", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", 
         RowBox[{"minmax", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "]"}]}], 
      RowBox[{"(*", " ", 
       RowBox[{"height", ":", " ", 
        RowBox[{
         RowBox[{"max", " ", "y"}], " ", "-", " ", 
         RowBox[{"min", " ", "y"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.642881869762618*^9, 3.642881880907474*^9}, {
  3.6428821090560703`*^9, 3.6428821763379087`*^9}, {3.642882658220728*^9, 
  3.642882690861375*^9}, {3.64288352042915*^9, 3.6428835328379107`*^9}, {
  3.6428836338023*^9, 3.6428837271825743`*^9}, {3.6428838007111473`*^9, 
  3.64288383542657*^9}, {3.642883965310628*^9, 3.642883982870357*^9}, {
  3.642884284730991*^9, 3.642884298630404*^9}, {3.6428850027041063`*^9, 
  3.642885004415925*^9}, {3.643123680450657*^9, 3.643123781691614*^9}, {
  3.643123949939355*^9, 3.643123955979083*^9}, {3.6431239981889257`*^9, 
  3.6431240959320908`*^9}, {3.6431244006791697`*^9, 3.643124410090364*^9}, {
  3.6431264897286053`*^9, 3.643126526134358*^9}, {3.643126638146284*^9, 
  3.643126662281201*^9}, {3.643126700598731*^9, 3.643126727459367*^9}, {
  3.643126813664812*^9, 3.643126862403322*^9}, {3.6613344620141773`*^9, 
  3.661334462362761*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AssocToSVG", "[", "assoc_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"KeyValueMap", "[", 
       RowBox[{
        RowBox[{"StringTemplate", "[", "\"\<`1`=\\\"`2`\\\"\>\"", "]"}], ",", 
        
        RowBox[{"KeyDrop", "[", 
         RowBox[{"assoc", ",", "\"\<meta\>\""}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"StringJoin", "[", "\[IndentingNewLine]", 
      RowBox[{"\"\<<\>\"", ",", 
       RowBox[{"assoc", "[", 
        RowBox[{"\"\<meta\>\"", ",", "\"\<type\>\""}], "]"}], ",", 
       "\"\< \>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Riffle", "[", 
         RowBox[{"data", ",", "\"\< \>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\"\< />\>\""}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.642860428104937*^9, 3.642860510506857*^9}, {
   3.6428607201542*^9, 3.642860734841796*^9}, {3.642860943734824*^9, 
   3.642860996536378*^9}, {3.64286116309652*^9, 3.642861207746574*^9}, {
   3.642861326673985*^9, 3.642861342345276*^9}, {3.6428614004445343`*^9, 
   3.642861492373061*^9}, {3.642862508330055*^9, 3.6428625104795713`*^9}, 
   3.642864363109826*^9, {3.642881376697461*^9, 3.642881378017064*^9}, {
   3.642882828932889*^9, 3.642882830146677*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SVG", "[", "gr_Graphics", "]"}], ":=", 
  RowBox[{"StringJoin", "[", "\[IndentingNewLine]", 
   RowBox[{"\"\<<svg \>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"getViewBox", "@", 
     RowBox[{"getPrimitives", "[", 
      RowBox[{"gr", ",", "defaults"}], "]"}]}], ",", "\[IndentingNewLine]", 
    "\"\< preserveAspectRatio=\\\"xMinYMin meet\\\" width=\\\"348px\\\" \
height=\\\"348px\\\">\\n\\t\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"StringRiffle", "[", 
     RowBox[{
      RowBox[{"AssocToSVG", "/@", 
       RowBox[{"getPrimitives", "[", 
        RowBox[{"gr", ",", "defaults"}], "]"}]}], ",", "\"\<\\n\\t\>\""}], 
     "]"}], ",", "\[IndentingNewLine]", "\"\<\\n</svg>\>\""}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.642882880457766*^9, 3.642882909357765*^9}, {
  3.6428830588364162`*^9, 3.642883142321432*^9}, {3.6428831800762568`*^9, 
  3.64288325004661*^9}, {3.6431231718250504`*^9, 3.643123209223793*^9}, {
  3.6431232438179007`*^9, 3.643123261642016*^9}, {3.6431299656369543`*^9, 
  3.643129972214306*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["is?", "Subsection",
 CellChangeTimes->{{3.642857956947451*^9, 3.642857958881722*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"isPrimitive", "[", "el_", "]"}], ":=", 
  RowBox[{"MemberQ", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Rectangle", ",", "\[IndentingNewLine]", "Circle"}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Head", "@", "el"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.64278600916028*^9, 3.642786011678151*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"isTransform", "[", "el_", "]"}], ":=", 
  RowBox[{"MemberQ", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "Rotate", ",", "\[IndentingNewLine]", "Translate", ",", 
      "\[IndentingNewLine]", "Scale"}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Head", "@", "el"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642819769349164*^9, 3.642819786886758*^9}, {
  3.6428198359800034`*^9, 3.642819837325194*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Convert properties", "Subsection",
 CellChangeTimes->{{3.642858019142922*^9, 3.6428580223291807`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"convertColor", "[", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"r_", ",", "g_", ",", "b_"}], "]"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"StringTemplate", "[", "\"\<rgb(`1`%,`2`%,`3`%)\>\"", "]"}], "[", 
   RowBox[{
    RowBox[{"100", "r"}], ",", 
    RowBox[{"100", "g"}], ",", 
    RowBox[{"100", "b"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"convertColor", "[", 
   RowBox[{"GrayLevel", "[", "gl_", "]"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"StringTemplate", "[", "\"\<rgb(`1`%,`1`%,`1`%)\>\"", "]"}], "[", 
   RowBox[{"100", "gl"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6428582073897257`*^9, 3.642858327243972*^9}, {
  3.6428585052339983`*^9, 3.642858608713657*^9}, {3.6428587578319883`*^9, 
  3.642858776015562*^9}, {3.6428588369689074`*^9, 3.642858870496635*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"toPt", "[", "val_", "]"}], ":=", 
  RowBox[{
   RowBox[{"StringTemplate", "[", "\"\<`1`pt\>\"", "]"}], "[", "val", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nPtToPx", "[", "val_", "]"}], ":=", 
  RowBox[{"val", "/", "1.25"}]}]}], "Input",
 CellChangeTimes->{{3.642864521745151*^9, 3.642864546956892*^9}, {
  3.642864854172954*^9, 3.6428648545702*^9}, {3.643126776845955*^9, 
  3.643126808492345*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1247, 725},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 115, 1, 90, "Title"],
Cell[CellGroupData[{
Cell[720, 27, 93, 1, 63, "Section"],
Cell[816, 30, 715, 13, 68, "Text"],
Cell[CellGroupData[{
Cell[1556, 47, 99, 1, 34, "Subsubsection"],
Cell[1658, 50, 377, 8, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2072, 63, 105, 1, 34, "Subsubsection"],
Cell[2180, 66, 597, 13, 68, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2814, 84, 107, 1, 34, "Subsubsection"],
Cell[2924, 87, 632, 13, 68, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3593, 105, 108, 1, 34, "Subsubsection"],
Cell[3704, 108, 666, 10, 68, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4407, 123, 97, 1, 34, "Subsubsection"],
Cell[4507, 126, 419, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[4951, 137, 945, 26, 112, "Input"],
Cell[5899, 165, 297, 6, 374, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6233, 176, 147, 3, 31, "Input"],
Cell[6383, 181, 865, 20, 23, "Print"],
Cell[7251, 203, 1085, 15, 172, "Output"]
}, Open  ]],
Cell[8351, 221, 325, 8, 31, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8725, 235, 93, 1, 63, "Section"],
Cell[8821, 238, 1291, 28, 232, "Input"],
Cell[CellGroupData[{
Cell[10137, 270, 150, 3, 31, "Input"],
Cell[10290, 275, 101, 1, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10440, 282, 155, 2, 63, "Section"],
Cell[10598, 286, 3560, 94, 236, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[14195, 385, 152, 2, 49, "Section"],
Cell[14350, 389, 3589, 85, 392, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[17976, 479, 102, 1, 49, "Section"],
Cell[CellGroupData[{
Cell[18103, 484, 105, 1, 44, "Subsection"],
Cell[18211, 487, 882, 19, 28, "Input"],
Cell[19096, 508, 2010, 45, 165, "Input"],
Cell[21109, 555, 1011, 16, 68, "Text"],
Cell[CellGroupData[{
Cell[22145, 575, 919, 21, 80, "Input"],
Cell[23067, 598, 10194, 236, 85, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33310, 840, 149, 2, 44, "Subsection"],
Cell[33462, 844, 3547, 83, 182, "Input"],
Cell[37012, 929, 1462, 31, 148, "Input"],
Cell[38477, 962, 1089, 21, 131, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39603, 988, 91, 1, 44, "Subsection"],
Cell[39697, 991, 381, 9, 80, "Input"],
Cell[40081, 1002, 477, 11, 97, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40595, 1018, 108, 1, 44, "Subsection"],
Cell[40706, 1021, 826, 19, 46, "Input"],
Cell[41535, 1042, 452, 11, 46, "Input"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
